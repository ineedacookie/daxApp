# Generated by Django 4.1 on 2022-08-25 01:22

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import timezone_field.fields
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('clock_actions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Company Name', max_length=255)),
                ('pay_period_type', models.CharField(choices=[('w', 'Weekly'), ('b', 'Bi-Weekly'), ('s', 'Semi-Monthly'), ('m', 'Monthly')], default='w', help_text='Pay period type', max_length=1)),
                ('period_begin_date', models.DateField(default=users.models.grab_begin_date)),
                ('week_start_day', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], default=0)),
                ('weekly_overtime', models.BooleanField(default=True)),
                ('weekly_overtime_value', models.IntegerField(blank=True, default=40, validators=[django.core.validators.MaxValueValidator(120), django.core.validators.MinValueValidator(0)])),
                ('daily_overtime', models.BooleanField(default=False)),
                ('daily_overtime_value', models.IntegerField(blank=True, default=8, validators=[django.core.validators.MaxValueValidator(23), django.core.validators.MinValueValidator(0)])),
                ('double_time', models.BooleanField(default=False)),
                ('double_time_value', models.IntegerField(blank=True, default=12, validators=[django.core.validators.MaxValueValidator(23), django.core.validators.MinValueValidator(1)])),
                ('enable_breaks', models.BooleanField(default=True)),
                ('breaks_are_paid', models.BooleanField(blank=True, default=False)),
                ('include_breaks_in_overtime_calculation', models.BooleanField(blank=True, default=False)),
                ('timezone', timezone_field.fields.TimeZoneField(choices_display='WITH_GMT_OFFSET', null=True)),
                ('default_theme', models.IntegerField(blank=True, null=True)),
                ('last_renew_date', models.DateField(blank=True, null=True)),
                ('use_company_timezone', models.BooleanField(blank=True, default=False)),
                ('display_employee_times_with_timezone', models.BooleanField(blank=True, default=False)),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Date')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('change_email', models.EmailField(blank=True, default=None, max_length=254, null=True)),
                ('first_name', models.CharField(help_text='Employees First Name', max_length=50, null=True)),
                ('middle_name', models.CharField(blank=True, help_text='Employees Middle Name', max_length=50, null=True)),
                ('last_name', models.CharField(help_text='Employees Last Name', max_length=100, null=True)),
                ('role', models.CharField(blank=True, choices=[('e', 'Employee'), ('c', 'Company Admin'), ('r', 'Restricted Admin')], default='e', help_text='The role of the user within the company', max_length=1, null=True)),
                ('pay_rate', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('theme', models.IntegerField(blank=True, default=1, null=True)),
                ('wp_id', models.CharField(blank=True, help_text='Wordpress ID', max_length=50, null=True)),
                ('timezone', timezone_field.fields.TimeZoneField(choices_display='WITH_GMT_OFFSET', null=True)),
                ('verified', models.BooleanField(blank=True, default=False, null=True)),
                ('created_date', models.DateField(auto_now_add=True, null=True, verbose_name='Date')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.company')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('time_action', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='clock_actions.timeactions')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
